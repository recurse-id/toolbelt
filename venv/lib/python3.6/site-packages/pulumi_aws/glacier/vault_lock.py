# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class VaultLock(pulumi.CustomResource):
    complete_lock: pulumi.Output[bool]
    ignore_deletion_error: pulumi.Output[bool]
    policy: pulumi.Output[str]
    """
    JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.
    """
    vault_name: pulumi.Output[str]
    """
    The name of the Glacier Vault.
    """
    def __init__(__self__, resource_name, opts=None, complete_lock=None, ignore_deletion_error=None, policy=None, vault_name=None, __name__=None, __opts__=None):
        """
        Create a VaultLock resource with the given unique name, props, and options.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] policy: JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.
        :param pulumi.Input[str] vault_name: The name of the Glacier Vault.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/glacier_vault_lock.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if complete_lock is None:
            raise TypeError("Missing required property 'complete_lock'")
        __props__['complete_lock'] = complete_lock

        __props__['ignore_deletion_error'] = ignore_deletion_error

        if policy is None:
            raise TypeError("Missing required property 'policy'")
        __props__['policy'] = policy

        if vault_name is None:
            raise TypeError("Missing required property 'vault_name'")
        __props__['vault_name'] = vault_name

        super(VaultLock, __self__).__init__(
            'aws:glacier/vaultLock:VaultLock',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

